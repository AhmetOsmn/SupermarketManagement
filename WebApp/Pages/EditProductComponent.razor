@page "/editproduct/{productID}"

@inject NavigationManager NavigationManager
@inject IAddProductUseCase AddProductUseCase
@inject IGetProductByIDUseCase GetProductByIDUseCase
@inject IEditProductUseCase EditProductUseCase
@inject IViewCategoriesUseCase ViewCategoriesUseCase

<h3>Edit product</h3>

@if (product != null)
{
    <EditForm Model="product" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
        </div>
        <br>
        <div class="form-group">
            <label for="description">Category</label>
            <select id="category" @bind="product.CategoryID" class="form-control">
                <option selected></option>
                @foreach (Category category in categories)
                {
                    <option value="@category.CategoryID">@category.Name</option>
                }
            </select>
        </div>
        <br>
        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="product.Price" @bind-Value:format="F2" class="form-control"></InputNumber>
        </div>
        <br>
        <div class="form-group">
            <label for="quantity">Quantity</label>
            <InputNumber id="quantity" @bind-Value="product.Quantity" class="form-control"></InputNumber>
        </div>
        <br>
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-danger" @onclick="OnCancel">Cancel</button>
    </EditForm>
}

@code {
    [Parameter]
    public string productID { get; set; }

    private Product product;
    private IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        categories = ViewCategoriesUseCase.Execute();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (int.TryParse(this.productID, out int iproductID))
        {
            Product tempproduct = GetProductByIDUseCase.Execute(iproductID);
            this.product = new Product
                {
                    ProductID = tempproduct.ProductID,
                    Name = tempproduct.Name,
                    CategoryID = tempproduct.CategoryID,
                    Price = tempproduct.Price,
                    Quantity = tempproduct.Quantity
                };
        }
    }


    private void OnValidSubmit()
    {
        EditProductUseCase.Execute(this.product);
        NavigationManager.NavigateTo("/products");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/products");
    }
}
